setw -g mode-keys vi
set -g mouse-utf8 on

set -sg escape-time 0

bind -n M-\ split-window -h
bind -n M-- split-window -v
bind -n M-= select-layout even-horizontal
bind -n M-+ select-layout even-vertical
bind -n M-n next-window
bind -n M-p previous-window

bind-key -nr    M-Up resize-pane -U
bind-key -nr  M-Down resize-pane -D
bind-key -nr  M-Left resize-pane -L
bind-key -nr M-Right resize-pane -R

bind-key -n M-PPage copy-mode -u

bind-key -n M-y copy-mode

bind-key -n M-8 choose-session
bind-key -n M-9 switch-client -p
bind-key -n M-0 switch-client -n

set-option -g history-limit 100000

set -g default-terminal "screen-256color"

set -g status-bg black
set -g status-fg white
set -g status-left '#[fg=green]#H'
set -g status-right '#[fg=green]#(uptime | cut -d "," -f 3-)'
set -g status off

setw -g monitor-activity on
set -g visual-activity on

set -g set-titles on
set -g set-titles-string '#S: #W'
setw -g automatic-rename

set -g mode-mouse on

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# copy/paste (requires reattach-to-user-namespace to be installed)
# see http://robots.thoughtbot.com/post/55885045171/tmux-copy-paste-on-os-x-a-better-future
# brew install reattach-to-user-namespace
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# use same keystrokes to navigate between vim and tmux splits
# see http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
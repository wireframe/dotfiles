{
  "version": 3,
  "sources": ["../src/previewAlertSounds.tsx", "../src/backend/soundData.ts"],
  "sourcesContent": ["import { Action, ActionPanel, environment, getPreferenceValues, List } from \"@raycast/api\";\nimport { exec } from \"child_process\";\nimport { Preferences } from \"./backend/types\";\nimport { soundData } from \"./backend/soundData\";\n\nexport default function Command() {\n  const prefs = getPreferenceValues<Preferences>();\n\n  const playSound = (fileName: string) => {\n    let command;\n    if (fileName === \"speak_timer_name\") {\n      command = `say \"Untitled Timer\"`;\n    } else {\n      const selectedSoundPath = `${environment.assetsPath + \"/\" + fileName}`;\n      command = `afplay \"${selectedSoundPath}\" --volume ${prefs.volumeSetting.replace(\",\", \".\")}`;\n    }\n    exec(command, (error, stderr) => {\n      if (error) {\n        console.log(`error: ${error.message}`);\n        return;\n      }\n      if (stderr) {\n        console.log(`stderr: ${stderr}`);\n        return;\n      }\n    });\n  };\n\n  return (\n    <List>\n      {soundData.map((item, index) => (\n        <List.Item\n          key={index}\n          icon={item.icon}\n          title={item.value === prefs.selectedSound ? `${item.title} (currently selected)` : item.title}\n          actions={\n            <ActionPanel>\n              <Action title=\"Play Sound\" onAction={() => playSound(item.value)} />\n            </ActionPanel>\n          }\n        />\n      ))}\n    </List>\n  );\n}\n", "import { SoundData } from \"./types\";\nimport { Icon } from \"@raycast/api\";\n\nconst soundData: SoundData[] = [\n  {\n    title: \"Alarm Clock\",\n    icon: Icon.Alarm,\n    value: \"alarmClock.wav\",\n  },\n  {\n    title: \"Dismembered Woodpecker\",\n    icon: Icon.Bird,\n    value: \"dismemberedWoodpecker.wav\",\n  },\n  {\n    title: \"Flute Riff\",\n    icon: Icon.Music,\n    value: \"fluteRiff.wav\",\n  },\n  {\n    title: \"Level Up\",\n    icon: Icon.Trophy,\n    value: \"levelUp.wav\",\n  },\n  {\n    title: \"Piano Chime\",\n    icon: Icon.Music,\n    value: \"pianoChime.wav\",\n  },\n  {\n    title: \"Terminator\",\n    icon: Icon.BarCode,\n    value: \"terminator.wav\",\n  },\n  {\n    title: \"Speak Timer Name\",\n    icon: Icon.Person,\n    value: \"speak_timer_name\",\n  },\n];\nexport { soundData };\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA4E,wBAC5EC,EAAqB,yBCArB,IAAAC,EAAqB,wBAEfC,EAAyB,CAC7B,CACE,MAAO,cACP,KAAM,OAAK,MACX,MAAO,gBACT,EACA,CACE,MAAO,yBACP,KAAM,OAAK,KACX,MAAO,2BACT,EACA,CACE,MAAO,aACP,KAAM,OAAK,MACX,MAAO,eACT,EACA,CACE,MAAO,WACP,KAAM,OAAK,OACX,MAAO,aACT,EACA,CACE,MAAO,cACP,KAAM,OAAK,MACX,MAAO,gBACT,EACA,CACE,MAAO,aACP,KAAM,OAAK,QACX,MAAO,gBACT,EACA,CACE,MAAO,mBACP,KAAM,OAAK,OACX,MAAO,kBACT,CACF,EDFc,IAAAC,EAAA,6BAhCC,SAARC,GAA2B,CAChC,IAAMC,KAAQ,uBAAiC,EAEzCC,EAAaC,GAAqB,CACtC,IAAIC,EACAD,IAAa,mBACfC,EAAU,uBAGVA,EAAU,WADgB,GAAG,cAAY,WAAa,IAAMD,CAAQ,EAC9B,cAAcF,EAAM,cAAc,QAAQ,IAAK,GAAG,CAAC,MAE3F,QAAKG,EAAS,CAACC,EAAOC,IAAW,CAC/B,GAAID,EAAO,CACT,QAAQ,IAAI,UAAUA,EAAM,OAAO,EAAE,EACrC,MACF,CACA,GAAIC,EAAQ,CACV,QAAQ,IAAI,WAAWA,CAAM,EAAE,EAC/B,MACF,CACF,CAAC,CACH,EAEA,SACE,OAAC,QACE,SAAAC,EAAU,IAAI,CAACC,EAAMC,OACpB,OAAC,OAAK,KAAL,CAEC,KAAMD,EAAK,KACX,MAAOA,EAAK,QAAUP,EAAM,cAAgB,GAAGO,EAAK,KAAK,wBAA0BA,EAAK,MACxF,WACE,OAAC,eACC,mBAAC,UAAO,MAAM,aAAa,SAAU,IAAMN,EAAUM,EAAK,KAAK,EAAG,EACpE,GANGC,CAQP,CACD,EACH,CAEJ",
  "names": ["previewAlertSounds_exports", "__export", "Command", "__toCommonJS", "import_api", "import_child_process", "import_api", "soundData", "import_jsx_runtime", "Command", "prefs", "playSound", "fileName", "command", "error", "stderr", "soundData", "item", "index"]
}

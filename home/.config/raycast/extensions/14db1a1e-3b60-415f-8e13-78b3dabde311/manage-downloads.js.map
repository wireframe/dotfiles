{
  "version": 3,
  "sources": ["../node_modules/untildify/index.js", "../src/manage-downloads.tsx", "../src/utils.tsx"],
  "sourcesContent": ["'use strict';\nconst os = require('os');\n\nconst homeDirectory = os.homedir();\n\nmodule.exports = pathWithTilde => {\n\tif (typeof pathWithTilde !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof pathWithTilde}`);\n\t}\n\n\treturn homeDirectory ? pathWithTilde.replace(/^~(?=$|\\/|\\\\)/, homeDirectory) : pathWithTilde;\n};\n", "import { ActionPanel, Action, List } from \"@raycast/api\";\nimport { PathLike } from \"fs\";\nimport { useState } from \"react\";\nimport { downloadsFolder, getDownloads, withAccessToDownloadsFolder } from \"./utils\";\n\nfunction Command() {\n  const [downloads, setDownloads] = useState(getDownloads());\n\n  function handleTrash(paths: PathLike | PathLike[]) {\n    setDownloads((downloads) =>\n      downloads.filter((download) => (Array.isArray(paths) ? !paths.includes(download.path) : paths !== download.path))\n    );\n  }\n\n  return (\n    <List>\n      {downloads.length === 0 && (\n        <List.EmptyView\n          icon={{ fileIcon: downloadsFolder }}\n          title=\"No downloads found\"\n          description=\"Well, first download some files \u00AF\\_(\u30C4)_/\u00AF\"\n        />\n      )}\n\n      {downloads.map((download) => (\n        <List.Item\n          key={download.path}\n          title={download.file}\n          icon={{ fileIcon: download.path }}\n          quickLook={{ path: download.path, name: download.file }}\n          accessories={[\n            {\n              date: download.lastModifiedAt,\n              tooltip: `Last modified: ${download.lastModifiedAt.toLocaleString()}`,\n            },\n          ]}\n          actions={\n            <ActionPanel>\n              <ActionPanel.Section>\n                <Action.Open title=\"Open File\" target={download.path} />\n                <Action.ShowInFinder path={download.path} />\n                <Action.CopyToClipboard\n                  title=\"Copy File\"\n                  content={{ file: download.path }}\n                  shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"c\" }}\n                />\n              </ActionPanel.Section>\n              <ActionPanel.Section>\n                <Action.OpenWith path={download.path} shortcut={{ modifiers: [\"cmd\"], key: \"o\" }} />\n                <Action.ToggleQuickLook shortcut={{ modifiers: [\"cmd\"], key: \"y\" }} />\n              </ActionPanel.Section>\n              <ActionPanel.Section>\n                <Action.Trash\n                  title=\"Delete Download\"\n                  paths={download.path}\n                  shortcut={{ modifiers: [\"ctrl\"], key: \"x\" }}\n                  onTrash={handleTrash}\n                />\n                <Action.Trash\n                  title=\"Delete All Downloads\"\n                  paths={downloads.map((d) => d.path)}\n                  shortcut={{ modifiers: [\"ctrl\", \"shift\"], key: \"x\" }}\n                  onTrash={handleTrash}\n                />\n              </ActionPanel.Section>\n            </ActionPanel>\n          }\n        />\n      ))}\n    </List>\n  );\n}\n\nexport default withAccessToDownloadsFolder(Command);\n", "import { Action, ActionPanel, Detail, getPreferenceValues } from \"@raycast/api\";\nimport { accessSync, constants, readdirSync, statSync } from \"fs\";\nimport { join } from \"path\";\nimport { ComponentType } from \"react\";\nimport untildify from \"untildify\";\n\nconst preferences = getPreferenceValues();\nexport const downloadsFolder = untildify(preferences.downloadsFolder ?? \"~/Downloads\");\nconst showHiddenFiles = preferences.showHiddenFiles;\nconst fileOrder = preferences.fileOrder;\nconst lastestDownloadOrder = preferences.lastestDownloadOrder;\n\nexport function getDownloads() {\n  const files = readdirSync(downloadsFolder);\n  return files\n    .filter((file) => showHiddenFiles || !file.startsWith(\".\"))\n    .map((file) => {\n      const path = join(downloadsFolder, file);\n      const stats = statSync(path);\n      return {\n        file,\n        path,\n        lastModifiedAt: stats.mtime,\n        createdAt: stats.ctime,\n        addedAt: stats.atime,\n        birthAt: stats.birthtime,\n      };\n    })\n    .sort((a, b) => {\n      switch (fileOrder) {\n        case \"addTime\":\n          return b.addedAt.getTime() - a.addedAt.getTime();\n        case \"createTime\":\n          return b.createdAt.getTime() - a.createdAt.getTime();\n        case \"modifiedTime\":\n        default:\n          return b.lastModifiedAt.getTime() - a.lastModifiedAt.getTime();\n      }\n    });\n}\n\nexport function getLatestDownload() {\n  const downloads = getDownloads();\n  if (downloads.length < 1) {\n    return undefined;\n  }\n\n  if (lastestDownloadOrder === \"addTime\") {\n    downloads.sort((a, b) => b.addedAt.getTime() - a.addedAt.getTime());\n  } else if (lastestDownloadOrder === \"createTime\") {\n    downloads.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\n  } else if (lastestDownloadOrder === \"modifiedTime\") {\n    downloads.sort((a, b) => b.lastModifiedAt.getTime() - a.lastModifiedAt.getTime());\n  } else if (lastestDownloadOrder === \"birthTime\") {\n    downloads.sort((a, b) => b.birthAt.getTime() - a.birthAt.getTime());\n  }\n\n  return downloads[0];\n}\n\nexport function hasAccessToDownloadsFolder() {\n  try {\n    accessSync(preferences.downloadsFolder, constants.R_OK);\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\nexport const withAccessToDownloadsFolder = <P extends object>(Component: ComponentType<P>) => {\n  return (props: P) => {\n    if (hasAccessToDownloadsFolder()) {\n      accessSync(preferences.downloadsFolder, constants.R_OK);\n      return <Component {...props} />;\n    } else {\n      const markdown = `## Permission Required\\n\\nThe Downloads Manager extension requires access to your Downloads folder. Please grant permission to use it.\\n\\n![Grant Permission](permission.png)`;\n      return (\n        <Detail\n          markdown={markdown}\n          actions={\n            <ActionPanel>\n              <Action.Open\n                title=\"Grant Permission\"\n                target=\"x-apple.systempreferences:com.apple.preference.security?Privacy_AllFiles\"\n              />\n            </ActionPanel>\n          }\n        />\n      );\n    }\n  };\n};\n"],
  "mappings": "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",
  "names": ["require_untildify", "__commonJSMin", "exports", "module", "os", "homeDirectory", "pathWithTilde", "manage_downloads_exports", "__export", "manage_downloads_default", "__toCommonJS", "import_api", "import_react", "import_api", "import_fs", "import_path", "import_untildify", "import_jsx_runtime", "preferences", "downloadsFolder", "untildify", "showHiddenFiles", "fileOrder", "lastestDownloadOrder", "getDownloads", "file", "path", "stats", "a", "b", "hasAccessToDownloadsFolder", "preferences", "error", "withAccessToDownloadsFolder", "Component", "props", "import_jsx_runtime", "Command", "downloads", "setDownloads", "getDownloads", "handleTrash", "paths", "download", "downloadsFolder", "d", "manage_downloads_default", "withAccessToDownloadsFolder"]
}
